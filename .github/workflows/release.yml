# Builds the presto plugin and releases it to pypi
name: Build and Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # release version number that must be updated for each release
env:
  version_number: '0.20.0rc1'

jobs:
  Bump_Version:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with: 
          python-version: '3.8'
          
      - uses: actions/checkout@v2

      - name: Setting up environment 
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install -r dev_requirements.txt
          
      - name: Bumping version 
        run: |
          bumpversion --config-file .bumpversion-dbt.cfg patch --new-version ${{env.version_number}}
          bumpversion --config-file .bumpversion.cfg patch --new-version ${{env.version_number}} --allow-dirty
          
      - name: Commit version bump
        run: |
          git status
          git add *
          git commit -m"Bumping version to ${{env.version_number}}"
          git push
          
  Build:
    runs-on: ubuntu-latest
    needs: Bump_Version
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with: 
          python-version: '3.8'
          
      - uses: actions/checkout@v2

      - name: Setting up environment 
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install -r dev_requirements.txt
          pip install twine
          pip install wheel setuptools
          
      - name: Run checks
        run: |
          python setup.py sdist bdist_wheel
          pip install dist/dbt_presto-${{env.version_number}}-py3-none-any.whl
          pip install dist/dbt-presto-${{env.version_number}}.tar.gz
          twine check dist/dbt_presto-${{env.version_number}}-py3-none-any.whl dist/dbt-presto-${{env.version_number}}.tar.gz
