# Builds the presto plugin and releases it to pypi
name: Build and Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# release version number that must be updated for each release
env:
  version_number: '0.19.5'

jobs:          
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with: 
          python-version: '3.8'
          
      - uses: actions/checkout@v2

      - name: Test release
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install -r dev_requirements.txt
          pip install twine wheel setuptools
          python setup.py sdist bdist_wheel
          pip install dist/dbt-presto-*.tar.gz
          pip install dist/dbt_presto-*-py3-none-any.whl
          twine check dist/dbt_presto-*-py3-none-any.whl dist/dbt-presto-*.tar.gz

  GitHubRelease:
    name: GitHub release
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with: 
          python-version: '3.8'
          
      - uses: actions/checkout@v2

      - name: Bumping version
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install -r dev_requirements.txt
          bumpversion --config-file .bumpversion-dbt.cfg patch --new-version ${{env.version_number}}
          bumpversion --config-file .bumpversion.cfg patch --new-version ${{env.version_number}} --allow-dirty
          git status

      - name: Commit version bump and tag
        uses: EndBug/add-and-commit@v7
        with:
          author_name: 'Leah Antkiewicz'
          author_email: 'leah.antkiewicz@fishtownanalytics.com'
          message: 'Bumping version to ${{env.version_number}}'
          tag: v${{env.version_number}}
          
  PypiRelease:
    name: Pypi release
    runs-on: ubuntu-latest
    needs: GitHubRelease
    environment: PypiProd
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with: 
          python-version: '3.8'
          
      - uses: actions/checkout@v2
        with:
          ref: v${{env.version_number}}
      
      - name: Release to pypi
        run: |
          python3 -m venv env
          source env/bin/activate
          pip install -r dev_requirements.txt
          pip install twine wheel setuptools
          python setup.py sdist bdist_wheel
          twine check dist/dbt_presto-${{env.version_number}}-py3-none-any.whl dist/dbt-presto-${{env.version_number}}.tar.gz
  
